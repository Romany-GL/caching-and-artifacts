# This is a recommended approach to cache npm i
# we use actions/checkout@v4 and actions/setup-node@v4 and prvide a cache key: 'npm'
# This will autmoatically do the cache

name: caching-recomended-approach
on: [push]
jobs:
  checkout-and-cache-deps:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        id: setup-node
        with:
          node-version: ${{matrix.node}}
          cache: 'npm'

      - name: install deps
        run: npm ci

      - name: print output
        run: echo "outputs::::>>>" ${{toJson(steps.setup-node.outputs.result) }}

  upload-artifacts:
    runs-on: ubuntu-latest
    needs: checkout-and-cache-deps

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: install deps
        run: npm ci

      - name: run test
        run: npm test

      - name: list repo files
        run: ls -a

      - name: upload-coverage-artifact
        uses: actions/upload-artifact@v4
        # always upload artifacts  even if test failed
        if: always()
        with:
          name: code-coverage # name of the file to upload
          path: coverage # path to the file we want to upload
          retention-days: 10 # days to keep the artifact on GH

  download-artifact:
    runs-on: ubuntu-latest
    needs: upload-artifacts
    steps:
      - name: download-coverage-artifact
        uses: actions/download-artifact@v4
        with:
          name: code-coverage # name of the artifact to download as we uploaded it
          path: code-coverage-report # how we want to name of the downladed file

      - name: list repo files
        run: ls -a

      - name: list downloaded artifact
        run: ls -a
        working-directory: code-coverage-report
